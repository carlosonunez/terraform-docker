version: '2.2'
services:
  yq:
    image: evns/yq
    tty: true
    stdin_open: true
    volumes:
      - $PWD:/app
    working_dir: /app
  # encrypt-env allows you to store an encrypted version of important environmen
  # variables, specifically those used by serverless.
  gpg:
    build:
      dockerfile: gpg.Dockerfile
      context: .
    entrypoint:
      - gpg
    working_dir: /app
    volumes:
      - $PWD:/app
  encrypt-env:
    extends: gpg
    command:
      - --batch
      - --yes
      - --passphrase=$ENV_PASSWORD
      - --output=env.gpg
      - --symmetric
      - .env
  # decrypt-env decrypts environment variables encrypted by `encrypt-env`.
  decrypt-env:
    extends: gpg
    command:
      - --decrypt
      - --batch
      - --yes
      - --passphrase=$ENV_PASSWORD
      - --output=.env
      - env.gpg
  encrypt-testdata:
    extends: gpg
    entrypoint: sh
    command:
      - -c
      - "zip -r testdata.zip testdata/ && \
         gpg \
          --batch \
           --yes \
           --passphrase=$ENV_PASSWORD \
           --output=testdata.gpg \
           --symmetric \
           testdata.zip"
  decrypt-testdata:
    extends: gpg
    entrypoint: sh
    command:
      - -c
      - "gpg \
          --decrypt \
          --batch \
           --yes \
           --passphrase=$ENV_PASSWORD \
           --output=testdata.zip \
           testdata.gpg && unzip testdata.zip"
